generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductType {
  experience
  benefit
  other
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  parentId    Int?
  thumbnail   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  Partner     Partner[]

  parent   Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children Category[] @relation("CategoryToCategory")
}

model Partner {
  id         Int       @id @default(autoincrement())
  name       String
  thumbnail  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  categoryId Int
  Category   Category? @relation(fields: [categoryId], references: [id])
  userId     Int?
  User       User?     @relation(fields: [userId], references: [id])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  thumbnail   String?
  quantity    Int
  type        ProductType
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
}

model Address {
  id         Int       @id @default(autoincrement())
  street     String
  number     String
  complement String?
  city       String
  state      String
  country    String
  zipCode    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  userId     Int
  User       User?     @relation(fields: [userId], references: [id])
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  name             String
  document         String    @unique
  phone            String?
  role             String
  keycloakUserId   String?
  emailVerified    Boolean   @default(false)
  verificationCode String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?
  Address          Address[]
  Partner          Partner[]
}
